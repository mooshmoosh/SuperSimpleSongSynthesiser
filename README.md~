SuperSimpleSongSynthesiser
==========================

One Sentence Description
------------------------
This is a low power, low boilerplate C++ class for generating music notation.

Possible Applications
---------------------
When learning a new instrument you often want to practice reading music. In particular specific patterns of notes in specific keys. When the notes are thought of as a sequence of integers representing semitones above (or below) middle C, its quite tempting to want to generate musical exercises with a computer. This class bridges the gap between just generating a sequence of numbers, and outputting a sheet of music.

When composing a piece of music, or writing an instrumental solo, typically a composer sits with a piano and randomly plays whatever comes to them until they play something that sounds like what they're after. The artist's intuition is what is generating the notes and rhythms. Suppose you have a very firm grasp of your own musical intuition, to the point you could codeify the mood, tone, and flow of the music you're after into C++ code. This class will let you listen to hours and hours of your musings while you're not sitting specifically at a piano. When you hear something you like, you have the notes in a format MuseScore/Sibelius understands.

Examples
--------
The following code generates two octaves of the C-chromatic scale in quarter notes.
`
	Song song;
	song.setSmallestInterval(4);
	for(int note=-12;note<=12;note++) {
		song.appendNote(note);
	}
	
	song.renderSingleNotelistToXML("out.xml");
`

The following code generates a short C-Blues solo.
`

`
